/*
 * 食事する哲学者 ( 古典的な並行処理問題 )
 *
 * それぞれの哲学者に部屋が与えられた。
 * 共用のダイニングルームでは、丸いテーブルが置かれ、5人それぞれのための席がある。
 * 彼らは半時計回りに座る。
 * 
 * 哲学者の左側にはそれぞれ金のフォークが配られる。
 * 中央には大きなボウルに入ったスパゲッティが常に補充される。
 * 
 * 哲学者は、空腹になったときにダイニングルームに出向き、
 * 自分専用の椅子に座り、左側のフォークを取り上げ、スパゲッティに突き刺す。
 * しかし、絡まりあったスパゲッティを口元まで運ぶには2本目のフォークが必要だった。
 * そのため自分の右側にあるフォークも使う必要があった。
 *
 * 食べ終わったら両側のフォークを元に戻し、席から立ち上がって、思索活動を続ける。
 * もちろん、1 本のフォークは同時に 1 人の哲学者しか使えない。
 * 他の哲学者が食事したければ、フォークが再び戻されるまでに待たなければならない。
 *
 * 次の問題を解く単純なアルゴリズムを考える
 * 1. 哲学者は左側の
 */

fn main() {
    println!("Hello, world!");
}
